#include <iostream>
using namespace std;
#define size 6
int stack[size];
int top = -1;

void push(int num){
    if(top<size-1){
        top++;
        stack[top]=num;
        cout<<num<<"inserted"<<endl;
    }
    else{
        cout<<"stack is overflow"<<endl;
    }
}

  void pop(){
              if (top==-1){
                  cout<<"stack is underflow"<<endl;
              }
              else{
                  cout<<stack[top]<<"removed"<<endl;
                  top--;
              }
              }
              void display(){
                  if(top==-1){
                      cout<<"stck is empty"<<endl;
                  
                  }
                  else{
                      for(int i=top;i>=0;i--){
                          cout<<stack[i]<<endl;
                      
                      }
                  }
              }
void peek(){
    if(top==-1){
        cout<<"stack is overflow or empty"<<endl;
         }
         else{
             cout<<stack[top]<<"is at top"<<endl;
         }
}
int main(){
  
  push(10);
    push(5);
      push(6);
        push(8);
          pop();
          pop();
          push(16);
          display();
          peek();
          }

output:#include <iostream>
using namespace std;
#define size 6
int stack[size];
int top = -1;

void push(int num){
    if(top<size-1){
        top++;
        stack[top]=num;
        cout<<num<<"inserted"<<endl;
    }
    else{
        cout<<"stack is overflow"<<endl;
    }
}

  void pop(){
              if (top==-1){
                  cout<<"stack is underflow"<<endl;
              }
              else{
                  cout<<stack[top]<<"removed"<<endl;
                  top--;
              }
              }
              void display(){
                  if(top==-1){
                      cout<<"stck is empty"<<endl;
                  
                  }
                  else{
                      for(int i=top;i>=0;i--){
                          cout<<stack[i]<<endl;
                      
                      }
                  }
              }
void peek(){
    if(top==-1){
        cout<<"stack is overflow or empty"<<endl;
         }
         else{
             cout<<stack[top]<<"is at top"<<endl;
         }
}
int main(){
  
  push(10);
    push(5);
      push(6);
        push(8);
          pop();
          pop();
          push(16);
          display();
          peek();
          }


output:10inserted
5inserted
6inserted
8inserted
8removed
6removed
16inserted
16
5
10
16is at top

